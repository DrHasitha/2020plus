language: python 
#dist: precise
R:
  - "3.2.4"
python:
  - "2.7"
  - "3.5"
branches:
  only:
    - master
addons:
  apt:
    #sources:
    #- r-packages-precise
    packages:
    - r-base-dev
    - r-recommended
    - pandoc
cache:
  directories: 
    - ~/Rlib
# Setup anaconda
install: 
  # - sudo apt-get update
  #- export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libgfortran.so.3
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - conda create -q -n test-environment numpy scipy nose pandas scikit-learn 
  - source activate test-environment
  - mkdir -p ~/Rlib
  - echo 'R_LIBS=~/Rlib' > .Renviron
  - echo 'options(repos = "http://cran.rstudio.com")' > .Rprofile
  - echo '.travis.yml' > .Rbuildignore
  #- Rscript -e 'if(!"devtools" %in% rownames(installed.packages())) { install.packages("devtools", dependencies = TRUE) }'
  - Rscript -e 'if(!"covr" %in% rownames(installed.packages())) { install.packages("covr", dependencies = TRUE) }'
  - Rscript -e 'if(!"randomForest" %in% rownames(installed.packages())) { install.packages("randomForest", dependencies = TRUE) }'
  - Rscript -e 'update.packages(ask = FALSE, instlib = "~/Rlib")'
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      pip install rpy2==2.8.4;
    else
      pip install rpy2;
script: "nosetests tests/test_train.py tests/test_classify.py tests/test_features.py"
